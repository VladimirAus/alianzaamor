<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\user\UserInterface;
use Drupal\Core\Url;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * @file
 * Customization for user login, registration and more.
 */

/**
 * Implements hook_form_alter().
 */
function aa_core_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if ($form_id === 'user_register_form') {
    $form['account']['mail']['#description'] = t("Una dirección de correo electrónico válida.");
    $form['account']['name']['#description'] = t("La Cédula de identidad para Venezolanos o DNI para Peruanos. Por favor SIN letras o puntos");
    $form['account']['pass']['#required'] = FALSE;
    $form['account']['pass']['#access'] = FALSE;
  }

  if ($form_id === 'user_login_form') {
    $staff = \Drupal::request()->query->get('staff');
    // All Venezolans will have to just log in with their
    // "Cédula de Identidad o DNI" as the password.
    if (!$staff) {
      $form['pass']['#required'] = FALSE;
      $form['pass']['#access'] = FALSE;
      array_unshift($form['#validate'], 'aa_core_user_login_validate_pass');
      // Disable cache if query argument is ?staff
      $form['#cache']['contexts'][] = 'url.query_args:staff';
    }
  }

}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function aa_core_user_insert(UserInterface $user) {
  // Assign "Cédula de Identidad o DNI" as the password.
  if (!$user->hasRole('administrator') ||
    !$user->hasRole('equipo') ||
    !$user->hasRole('administrator' ||
    !$user->hasRole('misionero'))) {
    $user->pass->value = $user->label();
    $user->save();
  }
}

/**
 * Valitation callback for aa_core_form_alter().
 */
function aa_core_user_login_validate_pass(array $form, FormStateInterface $form_state) {
  $name = $form_state->getValue('name');
  $form_state->setValue('pass', $name);
}

/**
 * Redirect after login to the user edit page
 *
 * @param \Drupal\user\UserInterface $account
 *   The user object on which the operation was just performed.
 */
function aa_core_user_login(UserInterface $account) {
  // @TODO: Update to hasRole to make sure members who just need help
  // are the ones who ONLY have "authenticated" and not any other role name.
  if ($account->hasRole('authenticated') && 
    !$account->hasRole('equipo') && 
    !$account->hasRole('misionero') && 
    !$account->hasRole('administrator')) {
    // Redirect to home since nothing to do.
    $route = Url::fromRoute('entity.user.edit_form', [
      'user' => $account->id()]
    );
    $response = new RedirectResponse($route->toString());
    $response->send();
  }
}
